version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: statify_postgres
    environment:
      POSTGRES_DB: statify
      POSTGRES_USER: statify_user
      POSTGRES_PASSWORD: statify_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U statify_user -d statify"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - statify_network

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    container_name: statify_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@statify.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - statify_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: statify_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - statify_network
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: statify_backend
    environment:
      - DATABASE_URL=postgresql://statify_user:statify_password@postgres:5432/statify
      - FRONTEND_URL=http://localhost:3000
      - BACKEND_URL=http://127.0.0.1:8000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - statify_network

networks:
  statify_network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data: